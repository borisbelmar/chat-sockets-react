@mixin headingGenerator($sizeRem) {
  @for $i from 1 through 6 {
      h#{$i} {
          font-size: $sizeRem;
          line-height: 120%;
      }
      @if $i <= 2 {
          $sizeRem: $sizeRem - 0.50rem;
      } @else {
          $sizeRem: $sizeRem - 0.25rem;
      }
  }
}

@mixin box-shadow($arguments) {
-webkit-box-shadow: $arguments;
-moz-box-shadow: $arguments;
box-shadow: $arguments;
}

@mixin transition-duration($duration) {
  -webkit-transition-duration: $duration;
  -moz-transition-duration: $duration;
  -o-transition-duration: $duration;
  transition-duration: $duration;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin scale($scale) {
  -moz-transform: scale($scale);
  -webkit-transform: scale($scale);
  -o-transform: scale($scale);
  -ms-transform: scale($scale);
  transform: scale($scale);
}

@mixin aspect-ratio($width, $height) {
position: relative;
display: block;
height: 0;
padding: 0;
overflow: hidden;
padding-bottom: ($height / $width) * 100%;
}

@mixin ellipsis($lines: 1, $substract: 0) {
  @if $lines == 1 {
      white-space: nowrap;
      text-overflow: ellipsis;
      width: 100% - $substract;
      overflow: hidden;
  } @else {
      overflow:hidden;
      display:-webkit-box;
      display:box;
      -webkit-line-clamp: $lines;
      line-clamp: $lines;
      /* autoprefixer: off */
      -webkit-box-orient: vertical;
      /* autoprefixer: on */
      box-orient: vertical;
  }
}

// --------------------------------------------------
// Flexbox SASS mixins
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
display: -webkit-box;
display: -moz-box;
display: -ms-flexbox;
display: -webkit-flex;
display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
-webkit-box-flex: $values;
   -moz-box-flex: $values;
    -webkit-flex: $values;
        -ms-flex: $values;
            flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
-webkit-flex-direction: $direction;
   -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
        flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
-webkit-flex-wrap: $wrap;
   -moz-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
        flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
-webkit-flex-flow: $flow;
   -moz-flex-flow: $flow;
    -ms-flex-flow: $flow;
        flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
-webkit-box-ordinal-group: $val;  
   -moz-box-ordinal-group: $val;     
       -ms-flex-order: $val;     
        -webkit-order: $val;  
          order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
-webkit-flex-grow: $grow;
   -moz-flex-grow: $grow;
    -ms-flex-grow: $grow;
        flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number> 
@mixin flex-shrink($shrink) {
-webkit-flex-shrink: $shrink;
   -moz-flex-shrink: $shrink;
    -ms-flex-shrink: $shrink;
        flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
@mixin flex-basis($width) {
-webkit-flex-basis: $width;
   -moz-flex-basis: $width;
    -ms-flex-basis: $width;
        flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
-webkit-justify-content: $justify;
   -moz-justify-content: $justify;
    -ms-justify-content: $justify;
        justify-content: $justify;
          -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
@mixin align-content($align) {
-webkit-align-content: $align;
   -moz-align-content: $align;
    -ms-align-content: $align;
        align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
-webkit-align-items: $align;
   -moz-align-items: $align;
    -ms-align-items: $align;
        align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
-webkit-align-self: $align;
   -moz-align-self: $align;
    -ms-align-self: $align;
        align-self: $align;
}

@mixin user-select($value) {
-webkit-touch-callout: $value; // iOS Safari
  -webkit-user-select: $value; // Safari 
   -khtml-user-select: $value; // Konqueror HTML 
     -moz-user-select: $value; // Old versions of Firefox
      -ms-user-select: $value; // Internet Explorer/Edge
          user-select: $value; // Non-prefixed version, currently
                               //supported by Chrome, Opera and Firefox
}

@mixin object-fit($value) {
-o-object-fit: $value;
   object-fit: $value;
}

@mixin flexGridCalculator($cols, $gap) {
width: calc((1/#{$cols}*100%) - #{$gap});
margin-right: $gap;
&.last-col {
  margin-right: 0;
  width: calc(1/#{$cols}*100%);
}
}

@mixin flexGridGenerator($columns: 12) {
$count: 0;
@while $count < $columns {
    $count: $count + 1;
    &.col-#{$count} {
        @include flexGridCalculator($count, 0.5rem);
    }
}
}

@mixin placeholder($element) {
#{$element}::-webkit-input-placeholder { /* Edge */
    @content;
}

#{$element}:-ms-input-placeholder { /* Internet Explorer 10-11 */
    @content;
}

#{$element}::placeholder {
    @content;
}
}